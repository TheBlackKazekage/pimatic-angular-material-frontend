/*! 
 * Name:        pimatic-angular-material-frontend 
 * Description: Provides an AngularJS webinterface for pimatic with material design. 
 * Version:     0.0.1 
 * Homepage:    http://github.com/denniss17/pimatic-angular-material-frontend 
 * Date:        2015-09-17 
 */
angular.module("pimaticApp.configuration",[]),angular.module("pimaticApp.configuration").constant("pimaticHost",""),angular.module("pimaticApp.configuration").constant("apiProviderName","apiProvider"),angular.module("pimaticApp.devices",[]),angular.module("pimaticApp.settings",[]),angular.module("pimaticApp.data",[]),angular.module("pimaticApp",["ngMaterial","ngRoute","ngMessages","pimaticApp.configuration","pimaticApp.devices","pimaticApp.settings","pimaticApp.data"]),angular.module("pimaticApp").config(["$routeProvider",function(a){a.when("/home",{templateUrl:"partials/home.html",controller:"HomeController"}).when("/login",{templateUrl:"partials/login.html",controller:"LoginController"}).when("/home/:pageId",{templateUrl:"partials/home.html",controller:"HomeController"}).when("/settings/groups",{templateUrl:"partials/settings/groups/index.html",controller:"GroupsController"}).when("/settings/groups/create",{templateUrl:"partials/settings/groups/create.html",controller:"GroupsCreateController"}).when("/settings/groups/:id",{templateUrl:"partials/settings/groups/edit.html",controller:"GroupsEditController"}).when("/settings/devices",{templateUrl:"partials/settings/devices.html",controller:"DevicesController"}).otherwise({redirectTo:"/home"})}]),angular.module("pimaticApp").run(["$rootScope","$location","$injector","store","auth","apiProviderName",function(a,b,c,d,e,f){a.store=d,a.auth=e;var g=c.get(f);g.init(d,e),a.$on("$routeChangeStart",function(a,c){e.isLoggedIn()||"/login"==c.originalPath||(console.log("pimaticApp","Redirecting to login..."),e.setRedirectedFrom(c.originalPath),b.path("/login"))})}]),angular.module("pimaticApp").config(["$mdThemingProvider",function(a){a.theme("default").primaryPalette("green").accentPalette("indigo")}]),angular.module("pimaticApp.data").factory("apiProvider",["$http","$q","$rootScope","baseProvider","pimaticHost","toast",function(a,b,c,d,e,f){var g={},h={groups:"group"};return angular.extend({},d,{socket:null,init:function(a,b){this.store=a,this.auth=b},start:function(){g={},this.setupSocket()},setupSocket:function(){var a=this.store,b=this;null!==this.socket&&this.socket.disconnect(),this.socket=io(e,{reconnection:!0,reconnectionDelay:1e3,reconnectionDelayMax:3e3,timeout:2e4,forceNew:!0}),this.socket.on("connect",function(){console.log("apiProvider","connect"),b.socket.emit("call",{id:"errorMessageCount",action:"queryMessagesCount",params:{criteria:{level:"error"}}}),b.socket.emit("call",{id:"guiSettings",action:"getGuiSetttings",params:{}}),b.socket.emit("call",{id:"updateProcessStatus",action:"getUpdateProcessStatus",params:{}})}),this.socket.on("hello",function(a){console.log("apiProvider","hello",a),b.auth.setUser(a)}),this.socket.on("callResult",function(a){switch(console.log("apiProvider","callResult",a),a.id){case"errorMessageCount":break;case"guiSettings":break;case"updateProcessStatus":}}),this.socket.on("devices",function(a){console.log("apiProvider","devices",a),b.handleIncomingData("devices",a)}),this.socket.on("rules",function(a){console.log("apiProvider","rules",a),b.handleIncomingData("rules",a)}),this.socket.on("variables",function(a){console.log("apiProvider","variables",a),b.handleIncomingData("variables",a)}),this.socket.on("pages",function(a){console.log("apiProvider","pages",a),b.handleIncomingData("pages",a)}),this.socket.on("groups",function(a){console.log("apiProvider","groups",a),b.handleIncomingData("groups",a)}),this.socket.on("deviceAttributeChanged",function(b){console.log("apiProvider","deviceAttributeChanged",b),c.$apply(function(){var c=a.get("devices",b.deviceId);null!==c&&angular.forEach(c.attributes,function(a){a.name==b.attributeName&&(a.value=b.value,a.lastUpdate=b.time)})})}),this.socket.on("variableValueChanged",function(b){console.log("apiProvider","variableValueChanged",b);var c=a.get("variables",b.variableName);null!==c&&(c.value=b.variableValue)}),this.socket.on("deviceChanged",function(b){console.log("apiProvider","deviceChanged",b),c.$apply(function(){a.update("devices",b,!0)})}),this.socket.on("deviceRemoved",function(b){console.log("apiProvider","deviceRemoved",b),c.$apply(function(){a.remove("devices",b,!0)})}),this.socket.on("deviceAdded",function(b){console.log("apiProvider","deviceAdded",b),c.$apply(function(){a.add("devices",b,!0)})}),this.socket.on("deviceOrderChanged",function(a){console.log("apiProvider","deviceOrderChanged",a)}),this.socket.on("pageChanged",function(b){console.log("apiProvider","pageChanged",b),c.$apply(function(){a.update("pages",b,!0)})}),this.socket.on("pageRemoved",function(b){console.log("apiProvider","pageRemoved",b),c.$apply(function(){a.remove("pages",b,!0)})}),this.socket.on("pageAdded",function(b){console.log("apiProvider","pageAdded",b),c.$apply(function(){a.add("pages",b,!0)})}),this.socket.on("pageOrderChanged",function(a){console.log("apiProvider","pageOrderChanged",a)}),this.socket.on("groupChanged",function(b){console.log("apiProvider","groupChanged",b),c.$apply(function(){a.update("groups",b,!0)})}),this.socket.on("groupRemoved",function(b){console.log("apiProvider","groupRemoved",b),c.$apply(function(){a.remove("groups",b,!0)})}),this.socket.on("groupAdded",function(b){console.log("apiProvider","groupAdded",b),c.$apply(function(){a.add("groups",b,!0)})}),this.socket.on("groupOrderChanged",function(a){console.log("apiProvider","groupOrderChanged",a)}),this.socket.on("ruleChanged",function(b){console.log("apiProvider","ruleChanged",b),c.$apply(function(){a.update("rules",b,!0)})}),this.socket.on("ruleAdded",function(b){console.log("apiProvider","ruleAdded",b),c.$apply(function(){a.add("rules",b,!0)})}),this.socket.on("ruleRemoved",function(b){console.log("apiProvider","ruleRemoved",b),c.$apply(function(){a.remove("rules",b,!0)})}),this.socket.on("ruleOrderChanged",function(a){console.log("apiProvider","ruleOrderChanged",a)}),this.socket.on("variableChanged",function(b){console.log("apiProvider","variableChanged",b),c.$apply(function(){a.update("variables",b,!0)})}),this.socket.on("variableAdded",function(b){console.log("apiProvider","variableAdded",b),c.$apply(function(){a.add("variables",b,!0)})}),this.socket.on("variableRemoved",function(b){console.log("apiProvider","variableRemoved",b),c.$apply(function(){a.remove("variables",b,!0)})}),this.socket.on("variableOrderChanged",function(a){console.log("apiProvider","variableOrderChanged",a)}),this.socket.on("updateProcessStatus",function(a){console.log("apiProvider","updateProcessStatus",a)}),this.socket.on("updateProcessMessage",function(a){console.log("apiProvider","updateProcessMessage",a)}),this.socket.on("messageLogged",function(a){console.log("apiProvider","messageLogged",a),"debug"!=a.level&&f.show(a.msg),"error"==a.level})},login:function(c,d,f){return b(function(b,g){var h={username:c,password:d};f&&(h.rememberMe=!0),a.post(e+"/login",h).success(function(a){a.success?b({username:a.username,rememberMe:a.rememberMe,role:a.role}):g(a.message)}).error(function(a){g(a.message)})})},handleIncomingData:function(a,b){a in g&&"promises"in g[a]?(angular.forEach(g[a].promises,function(a){a.resolve(b)}),delete g[a]):(g[a]={},g[a].data=b)},deviceAction:function(c,d,f){return b(function(b,f){a.get(e+"/api/device/"+c+"/"+d).success(function(a){a.success?b():f()}).error(function(a){f()})})},add:function(c,d){return b(function(b,f){var g=h[c],i={};i[g]=d,a.post(e+"/api/"+c+"/"+d.id,i).then(function(a){b(a[g])},function(a){f(a.message)})})},update:function(c,d){return b(function(b,f){var g=h[c],i={};i[g]=d,a.patch(e+"/api/"+c+"/"+d.id,i).then(function(a){b(a[g])},function(a){f(a.message)})})},remove:function(c,d){return b(function(b,f){a["delete"](e+"/api/"+c+"/"+d.id).then(function(a){b(a.removed)},function(a){f(a.message)})})},load:function(a){if(a in g&&"data"in g[a]){var c=b(function(b){b(g[a].data)});return delete g[a],c}var d=b.defer();return angular.isUndefined(g[a])&&(g[a]={}),angular.isUndefined(g[a].promises)&&(g[a].promises=[]),g[a].promises.push(d),d.promise}})}]),angular.module("pimaticApp.data").factory("baseProvider",["$q",function(a){return{init:function(){},deviceAction:function(b,c,d){return a(function(a,b){b()})},login:function(b,c,d){return a(function(a,b){b("Not implemented")})},start:function(){},load:function(b){return a(function(a,b){b("Not implemented")})},add:function(b,c){return a(function(a,b){b("Not implemented")})},update:function(b,c){return a(function(a,b){b("Not implemented")})},remove:function(b,c){return a(function(a,b){b("Not implemented")})}}}]),angular.module("pimaticApp.data").factory("fixtureProvider",["$http","$q","baseProvider",function(a,b,c){var d={};return angular.extend({},c,{start:function(){d={},a.get("assets/fixtures/devices.json").then(function(a){d.devices=a.data},function(){d.devices=[]}),a.get("assets/fixtures/groups.json").then(function(a){d.groups=a.data},function(){d.groups=[]}),a.get("assets/fixtures/pages.json").then(function(a){d.pages=a.data},function(){d.pages=[]}),a.get("assets/fixtures/rules.json").then(function(a){d.rules=a.data},function(){d.rules=[]}),a.get("assets/fixtures/variables.json").then(function(a){d.variables=a.data},function(){d.variables=[]})},load:function(a){return b(function(b){for(;!(a in d););b(d[a])})}})}]),angular.module("pimaticApp").factory("auth",["store","$injector","$location","$q",function(a,b,c,d){return{store:a,user:null,redirectedFrom:null,isLoggedIn:function(){return null!==this.user},setUser:function(b,c){console.log("auth","New user: ",b),this.user=b,c&&a.reset(),null!==b&&this.redirect()},login:function(a,b,c){var e=this;return d(function(d,f){e.store.provider.login(a,b,c).then(function(a){e.setUser(a,!0),d(a)},f)})},redirect:function(){null!==this.redirectedFrom?(c.path(this.redirectedFrom),console.log("auth","Logged in, redirecting to ",this.redirectedFrom),this.redirectedFrom=null):(c.path("home"),console.log("auth","Logged in, redirecting to /home (default)"))},setRedirectedFrom:function(a){this.redirectedFrom=a}}}]),angular.module("pimaticApp.data").factory("store",["$q","$injector","apiProviderName",function(a,b,c){var d={provider:b.get(c),store:{},reset:function(){console.log("STORE RESET"),this.store={devices:{timestamp:0,data:[]},groups:{timestamp:0,data:[]},pages:{timestamp:0,data:[]},rules:{timestamp:0,data:[]},variables:{timestamp:0,data:[]}},this.provider.start()},get:function(a,b){var c=this;if(a in c.store){if(0!==c.store[a].timestamp||c.store[a].loading||(c.store[a].loading=!0,c.provider.load(a).then(function(b){console.log(a,b),c.store[a].data=b;var d=new Date;c.store[a].timestamp=d.getTime(),c.store[a].loading=!1},function(){c.store[a].loading=!1})),angular.isUndefined(b))return c.store[a].data;var d=null;return angular.forEach(c.store[a].data,function(a){a.id==b&&(d=a)}),d}return angular.isUndefined(b)?[]:null},add:function(b,c,d){var e=this.provider,f=this,g=function(){var a=f.get(b,c.id);angular.isUndefined(a)?f.get(b).push(c):f.update(b,c,d)};return a(function(a,f){d?(g(c),a(c)):e.add(b,c).then(function(b){g(b),a(b)},function(a){f(a)})})},update:function(b,c,d){var e=this.provider,f=this;return a(function(a,g){var h=f.get(b,c.id);null===h&&g("Fatal: update called, but object does not exist"),d?(angular.merge(h,c),a(c)):e.update(b,c).then(function(b){angular.merge(h,b),a(b)},function(a){g(a)})})},remove:function(b,c,d){var e=this,f=function(){var a=e.store[b].data.indexOf(c);console.log(a),a>=0&&e.store[b].data.splice(a,1)};return a(function(a,g){d?(f(c),a(c)):e.provider.remove(b,c).then(function(b){f(c),a(b)},function(a){g(a)})})}};return d.reset(),d}]),angular.module("pimaticApp").factory("toast",["$mdToast",function(a){return{show:function(b){a.show(a.simple().content(b))},error:function(b){a.show(a.simple().content(b))},deviceActionDone:function(a,b){this.show("Done: "+b+" "+a.id)},deviceActionFail:function(a,b){this.error("Fail: "+b+" "+a.id)}}}]),angular.module("pimaticApp.devices").controller("SwitchController",["$scope","store","toast",function(a,b,c){a.updateValue=function(d){var e=d.value?"turnOn":"turnOff";b.provider.deviceAction(a.device.id,e).then(function(){c.deviceActionDone(a.device,e)},function(){d.value=!d.value,c.deviceActionFail(a.device,e)})}}]),angular.module("pimaticApp.devices").controller("ThermostatController",["$scope",function(a){}]),angular.module("pimaticApp").controller("HomeController",["$scope",function(a){a.selectedTab=0}]),angular.module("pimaticApp").controller("LoginController",["$scope","auth",function(a,b){null!==b.user&&b.redirect(),a.form={},a.login=function(){console.log("login"),a.form.message=null,a.form.busy=!0,b.login(a.form.username,a.form.password,a.form.rememberMe).then(function(){a.form.busy=!1},function(b){a.form.message=b,a.form.busy=!1})}}]),angular.module("pimaticApp").controller("MainController",["$scope","$mdSidenav","$mdMedia",function(a,b,c){a.$mdMedia=c,a.toggleMenu=function(){b("left").toggle()}}]),angular.module("pimaticApp.settings").controller("DevicesController",["$scope",function(a){a.ungroupedDevices=function(){var b=a.store.get("groups"),c=a.store.get("devices"),d=[];return angular.forEach(c,function(a){d.push(a.id)}),angular.forEach(b,function(a){angular.forEach(a.devices,function(a){var b=d.indexOf(a);b>=0&&d.splice(b,1)})}),d}}]),angular.module("pimaticApp.settings").controller("GroupsCreateController",["$scope","$location","toast",function(a,b,c){a.group={},a.cancel=function(a){a.preventDefault(),b.path("settings/groups")},a.save=function(){a.store.add("groups",a.group).then(function(){b.path("settings/groups")},function(a){c.error("Saving group failed: "+a)})}}]),angular.module("pimaticApp.settings").controller("GroupsEditController",["$scope","$location","$routeParams","$mdDialog","toast",function(a,b,c,d,e){a.group=angular.copy(a.store.get("groups",c.id)),null===a.group&&b.path("settings/groups"),a.cancel=function(a){a.preventDefault(),b.path("settings/groups")},a["delete"]=function(c){c.preventDefault();var f=d.confirm().title("Are you sure you want to delete this group?").content(a.group.id).ariaLabel("Delete group").ok("Yes").cancel("No").targetEvent(c);d.show(f).then(function(){a.store.remove("groups",a.group).then(function(){b.path("settings/groups")},function(a){e.error("Deleting group failed: "+a)})})},a.save=function(){a.store.update("groups",a.group).then(function(){b.path("settings/groups")},function(a){e.error("Saving group failed: "+a)})}}]),angular.module("pimaticApp.settings").controller("GroupsController",["$scope","$location",function(a,b){a.edit=function(a){b.path("settings/groups/"+a)}}]),angular.module("pimaticApp").directive("deviceCard",["toast",function(a){return{scope:{device:"="},template:"<ng-include src=\"'partials/devices/' + device.template + '.html'\"></ng-include>",controller:function(a){a.getAttribute=function(b){var c=null;return angular.forEach(a.device.attributes,function(a){a.name==b&&(c=a)}),c}}}}]);